{"version":3,"sources":["webpack:///./src/pages/local-file.js"],"names":["htmlcode","SecondPage","useEffect","Prism","highlightAll","setShowFlag","useState","filepath","setFilepath","name","setName","expand","setExpand","title","className","type","id","accept","onChange","e","event","target","files","URL","createObjectURL","hidden","htmlFor","onClick","preventDefault","removeAudio","src","format","join"],"mappings":"+RAwFMA,G,UAAQ,4gDA6DCC,UA5II,WAAO,IAAD,EACvBC,qBAAU,WAERC,IAAMC,eACNC,GAAY,MAJS,MAMWC,oBAAS,GAAxBD,GANI,aAOSC,mBAAS,IAAlCC,EAPgB,KAONC,EAPM,OAQCF,mBAAS,IAA1BG,EARgB,KAQVC,EARU,OASKJ,oBAAS,GAA9BK,EATgB,KASRC,EATQ,KA4BvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,gBACX,gDACA,yBAAKC,UAAU,gBACb,+BAAOC,KAAK,OACRD,UAAU,aACVE,GAAG,aACHP,KAAK,aACLQ,OAAO,UACPC,SAAU,SAACC,GAAD,OA3BH,SAACC,GAChB,GAAKA,EAAMC,OAAOC,MAAM,GAAxB,CAGA,IAAIf,EAAWgB,IAAIC,gBAAgBJ,EAAMC,OAAOC,MAAM,IAJ5B,EAQtBF,EAAMC,OAAOC,MAAM,GADrBb,GAPwB,EAMxBM,KANwB,EAOxBN,MAEFD,EAAYD,GACZG,EAAQD,IAiBiBS,CAASC,MAL9B,GAMO,aANP,EAOIM,QAPJ,MASA,2BAAOC,QAAQ,cACX,yBAAKZ,UAAU,cACVL,GAAQ,wBAGZF,EACG,yBAAKO,UAAU,aAAaa,QAAS,SAACR,GAAD,OAzB/B,SAACA,GACnBA,EAAES,iBACFpB,EAAY,IACZE,EAAQ,IAsB8CmB,CAAYV,KAClD,uBAAGL,UAAU,kBAAb,UAIH,OAIVP,EACG,kBAAC,IAAD,CACIuB,IAAK,CAACvB,GACNwB,OAAQ,CAAC,MAAO,SACf,KAET,4BACEJ,QAAS,kBAAMf,GAAWD,IAC1BG,UAAW,eAEVH,EAAQ,OAAO,OAJlB,gBAMA,yBAAKG,UAAW,CAAC,qBAAsBH,EAAS,SAAU,SAASqB,KAAK,MACtE,yBAAKlB,UAAU,gBACb,0BAAMA,UAAU,gBAAgBd","file":"component---src-pages-local-file-js-5b1ba61aa1d9036a546b.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Prism from 'prismjs'\r\nimport Player from \"react-howler-player\";\r\n\r\n\r\nimport './local-file.scss'\r\n\r\nconst SecondPage = () => {\r\n  useEffect(() => {\r\n    // call the highlightAll() function to style our code blocks\r\n    Prism.highlightAll()\r\n    setShowFlag(true)\r\n  })\r\n  const [showPlayer, setShowFlag] = useState(false)\r\n  const [filepath, setFilepath] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [expand, setExpand] = useState(false)\r\n\r\n  const onChange = (event) => {\r\n    if (!event.target.files[0]) {\r\n      return\r\n    }\r\n    let filepath = URL.createObjectURL(event.target.files[0]);\r\n    const {\r\n      type,\r\n      name\r\n    } = event.target.files[0];\r\n    setFilepath(filepath)\r\n    setName(name)\r\n  }\r\n  const removeAudio = (e) => {\r\n    e.preventDefault();\r\n    setFilepath('')\r\n    setName('')\r\n  }\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Local audio\" />\r\n      <h2>Local audio file</h2>\r\n      <div className=\"form-element\">\r\n        <input type=\"file\" \r\n            className=\"file-input\" \r\n            id=\"file-input\" \r\n            name=\"audio_file\" \r\n            accept=\"audio/*\" \r\n            onChange={(e) => onChange(e)}\r\n            id=\"audio-file\"\r\n            hidden\r\n        />\r\n        <label htmlFor=\"audio-file\">\r\n            <div className=\"form-label\">\r\n                {name || 'Select an audio file'} \r\n            </div>\r\n\r\n            {filepath ? \r\n                <div className=\"icon-close\" onClick={(e)=>removeAudio(e)}>\r\n                    <i className=\"material-icons\">\r\n                        close\r\n                    </i>\r\n                </div>\r\n                :null\r\n            }\r\n        </label>\r\n      </div>\r\n      {filepath ? \r\n          <Player\r\n              src={[filepath]}\r\n              format={['wav', 'mp3']}\r\n          /> : null\r\n      }\r\n      <button\r\n        onClick={() => setExpand(!expand)}\r\n        className={'button-code'}\r\n      >\r\n        {expand? 'Hide':'Show'} Source code\r\n      </button>\r\n      <div className={[\"expandable-section\", expand ? 'expand': 'close'].join(' ')}>\r\n        <pre className=\"line-numbers\">\r\n          <code className=\"language-jsx\">{htmlcode}</code>\r\n        </pre>\r\n      </div>\r\n\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst htmlcode = `import React, { useEffect, useState } from \"react\"\r\nimport Player from \"react-howler-player\";\r\n\r\n\r\nconst Component = () => {\r\n  const [filepath, setFilepath] = useState('')\r\n  const [name, setName] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    if (!event.target.files[0]) {\r\n      return\r\n    }\r\n    let filepath = URL.createObjectURL(event.target.files[0]);\r\n    const {\r\n      type,\r\n      name\r\n    } = event.target.files[0];\r\n    setFilepath(filepath)\r\n    setName(name)\r\n  }\r\n  const removeAudio = (e) => {\r\n    e.preventDefault();\r\n    setFilepath('')\r\n    setName('')\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"form-element\">\r\n        <input type=\"file\" \r\n            className=\"file-input\" \r\n            id=\"file-input\" \r\n            name=\"audio_file\" \r\n            accept=\"audio/*\" \r\n            onChange={(e) => onChange(e)}\r\n            id=\"audio-file\"\r\n            hidden\r\n        />\r\n        <label htmlFor=\"audio-file\">\r\n            <div className=\"form-label\">\r\n                {name || 'Select an audio file'} \r\n            </div>\r\n\r\n            {filepath ? \r\n                <div className=\"icon-close\" onClick={(e)=>removeAudio(e)}>\r\n                    <i className=\"material-icons\">\r\n                        close\r\n                    </i>\r\n                </div>\r\n                :null\r\n            }\r\n        </label>\r\n      </div>\r\n      {filepath ? \r\n          <Player\r\n              src={[filepath]}\r\n              format={['wav', 'mp3']}\r\n          /> : null\r\n      }\r\n    </div>\r\n  )\r\n}`\r\nexport default SecondPage\r\n"],"sourceRoot":""}